#!/usr/local/bin/ruby
#

require 'highline/import'
require 'uri'

require_relative '../lib/reconnoiterer'


app = Reconnoiterer.app

Thread.new do
  loop do
    app.run
    sleep 5
  end
end

say("\n\n*** Reconnoiterer - Monitoring your site ***\n\n")
loop do
  say("What would you like to do?")
  choose do |menu|
    menu.index
    menu.choice("Add a site to monitor") do

      url = ask("Enter the site's URL") do |u|
        u.validate = lambda do |u|
          begin
            URI.parse(u)
          rescue URI::InvalidURIError
            false
          end
        end
        u.responses[:not_valid] = "Please enter a valid url."
      end
      site = app.add_url(url)

      say("Choose a condition to monitor")
      choose do |add_menu|
        add_menu.index
        add_menu.choice("Monitor Response Code") do
          app.add_condition(:response_code, site)
        end
        add_menu.choice("Response Body Regex Match") do
          regx = ask("Enter a regular expression (without the forward slashes)")
          app.add_condition(:response_body, site, :match => Regexp.new(regx))
        end
        add_menu.choice("Response Body Regex does Not Match") do
          regx = ask("Enter a regular expression (without the forward slashes)")
          app.add_condition(:response_body, site, :not_match => Regexp.new(regx))
        end
      end

    end
    menu.choice("List monitored sites with statuses") do
      if app.messages.blank?
        say("Recon has not been completed. The spy will return in 5 seconds.")
      else
        say("#{app.messages}")
      end
    end
    menu.choice("Remove a monitored site") do
      say("Select a site to remove")
      choose do |rm_menu|
        rm_menu.index
        app.sites.each do |site|
          rm_menu.choice("#{site.host}") do 
            app.remove_site(site)
          end
        end
      end
    end
    menu.choice("Add a notifier") do
      say("Select a new notifier")
      choose do |note_menu|
        note_menu.index
        note_menu.choice("Growl Notification") do
          app.add_notifier(:growl)
        end
        note_menu.choice("SMS Notification") do
          phone = ask("Enter your phone number: ")
          app.add_notifier(:sms, :to => phone)
        end
      end
    end
    menu.choice("Exit")do
      exit
    end

  end

end


